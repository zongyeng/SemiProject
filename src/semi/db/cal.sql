
DROP TABLE USERINFO;
DROP SEQUENCE USERINFOSEQ;

CREATE SEQUENCE USERINFOSEQ;

--유저 기본정보 입니다. 
--가입순서, 기능번호, 이름, 닉네임, 성별, 나이, 핸드폰번호, 이메일, 가입일자, 유저 조회수, 유저 추천수, 활성화여부
CREATE TABLE USERINFO(
	USERSEQ NUMBER PRIMARY KEY,
	USERCONTROLNO NUMBER(1) NOT NULL CONSTRAINT CONTROLNOCHECK CHECK (USERCONTROLNO IN ('0', '1', '2')),
	USERNAME VARCHAR2(30) NOT NULL,
	USERNICNAME VARCHAR2(30) NOT NULL CONSTRAINT NICNAMECHECK UNIQUE,
	USERSEX CHAR(1) NOT NULL CONSTRAINT SEXCHECK CHECK (USERSEX IN ('M','F','X')),
	USERAGE NUMBER(4) NOT NULL,
	USERPHONNUMBER VARCHAR2(20) NOT NULL,
	USEREMAIL VARCHAR2(30),
	USERSIGNDATE DATE DEFAULT SYSDATE CONSTRAINT SIGNDATE NOT NULL,
	MUSICIANVIEW NUMBER DEFAULT '0' CONSTRAINT NOTNEGATIVEVIEW CHECK (MUSICIANVIEW>=0),
	MUSICIANRECOMMENDATION NUMBER DEFAULT '0' CONSTRAINT NOTNEGATIVERECOMMENDATION CHECK (MUSICIANRECOMMENDATION>=0),
	USERENABLE CHAR(1) DEFAULT 'Y' CONSTRAINT ENABLECHECK CHECK (USERENABLE IN ('Y','N')) 
);

SELECT USERSEQ, USERCONTROLNO, USERNAME, USERNICNAME, USERSEX, USERAGE, USERPHONNUMBER, USEREMAIL, USERSIGNDATE, MUSICIANVIEW, MUSICIANRECOMMENDATION, USERENABLE FROM USERINFO;

INSERT INTO USERINFO 
	VALUES(USERINFOSEQ.NEXTVAL,'0','조영찬','메롱캬르르','M','27','010-3495-0424','zongyeng1@navre.com',SYSDATE,'0','0','Y');

INSERT INTO USERINFO (USERSEQ,USERCONTROLNO,USERNAME,USERNICNAME,USERSEX,USERAGE,USERPHONNUMBER,USEREMAIL) 
	VALUES(USERINFOSEQ.NEXTVAL,'1','박훈성','pigstar0000','M','29','010-1234-5678','pigstar0000@navre.com');

	
DROP TABLE MUSICIANSONG;
DROP SEQUENCE SONGSEQ;

CREATE SEQUENCE SONGSEQ;

--뮤지션 노래 정보 입니다. 노래 이름을 '고유번호_노래이름'으로 잡아주세요.
--노래 고유번호, 뮤지션고유번호, 노래등록순서번호, 노래이름, 파일용량, 파일길이, 하이라이트 시작 시간, 노래설명, 작곡가, 작사가, 등록일자, 총조회수, 총추천수, 활성화여부 
CREATE TABLE MUSICIANSONG(
	SONGSEQ NUMBER PRIMARY KEY,
	MUSICIANSEQ NUMBER,
	SONGNO NUMBER,
	SONGNAME VARCHAR2(30) NOT NULL,
	SONGSIZE NUMBER NOT NULL,
	SONGTIME NUMBER NOT NULL,
	SONGHIGHLIGHTTIME NUMBER DEFAULT '0' NOT NULL,
	SONGCONTENT VARCHAR2(300) DEFAULT '없음' NOT NULL,
	SONGCOMPOSER VARCHAR2(100) DEFAULT '미상'  NOT NULL,
	SONGLYRICIST VARCHAR2(100) DEFAULT '미상' NOT NULL,
	SONGINPUTDATE DATE DEFAULT SYSDATE NOT NULL,
	SONGTAG VARCHAR2(300) DEFAULT '미지정' NOT NULL,
	SONGVIEW NUMBER DEFAULT '0' CONSTRAINT NOTNEGATIVESONGVIEW CHECK (SONGVIEW>=0),
	SONGRECOMMENDATION NUMBER DEFAULT '0' CONSTRAINT NOTNEGATIVESONGRECOMMENDATION CHECK (SONGRECOMMENDATION>=0),
	SONGENABLE CHAR(1) DEFAULT 'Y' CONSTRAINT ENABLESONGCHECK CHECK (SONGENABLE IN ('Y','N')),
	CONSTRAINT MUSICIANFK FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);

SELECT SONGSEQ, MUSICIANSEQ, SONGNO, SONGNAME, SONGSIZE, SONGTIME, SONGHIGHLIGHTTIME, SONGCONTENT, SONGCOMPOSER, SONGLYRICIST, SONGINPUTDATE, SONGVIEW, SONGRECOMMENDATION, SONGENABLE FROM MUSICIANSONG;

INSERT INTO MUSICIANSONG 
	VALUES(SONGSEQ.NEXTVAL,'1','1','1_FUNKEYMUSIC','13','0350','0123','펑키뮤직!','박훈성','조영찬',SYSDATE,'funky','0','0','Y');

INSERT INTO MUSICIANSONG (SONGSEQ,MUSICIANSEQ, SONGNO, SONGNAME, SONGSIZE, SONGTIME) 
	VALUES(SONGSEQ.NEXTVAL,'1','2','1_SMILEDAY','12.23','0401');

DROP TABLE SONGSTATISTICS;

--앨범의 조회수와 추천수를 계산하고 기간별 통계낼 수 있는 테이블입니다.
--앨범 고유번호, 조회 일자, 추천수
CREATE TABLE SONGSTATISTICS(
	SONGSEQ NUMBER,
	SONGVIEW DATE DEFAULT SYSDATE NOT NULL,
	SONGRECOMMENDATION CHAR(1) CONSTRAINT ENABLESONGSTATISTICSCHECK CHECK (SONGRECOMMENDATION IN ('Y','N')),
	CONSTRAINT SONGSEQFK FOREIGN KEY(SONGSEQ) REFERENCES MUSICIANSONG(SONGSEQ)
);

--추천수 카운트 예제.
SELECT COUNT(SONGRECOMMENDATION) FROM SONGSTATISTICS WHERE SONGRECOMMENDATION='Y';

INSERT INTO SONGSTATISTICS (SONGSEQ, SONGRECOMMENDATION) VALUES('1','N');

INSERT INTO SONGSTATISTICS (SONGSEQ, SONGRECOMMENDATION) VALUES('1','Y');

INSERT INTO SONGSTATISTICS (SONGSEQ,SONGRECOMMENDATION) VALUES('1','Y');




CREATE TABLE TIMELINE(
	MUSICIANSEQ NUMBER,
	
	CONSTRAINT TIMELINEFK FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);