
DROP TABLE USERINFO;
DROP SEQUENCE USERINFOSEQ;

CREATE SEQUENCE USERINFOSEQ;

--유저 기본정보 입니다. 
--가입순서, 기능번호, 이름, 닉네임, 성별, 나이, 핸드폰번호, 이메일, 가입일자, 유저 조회수(필요없음), 유저 추천수(FAVORITEMUSICIAN TABLE에서 산출 가능), 활성화여부
CREATE TABLE USERINFO(
	USERSEQ NUMBER PRIMARY KEY,
	USERCONTROLNO NUMBER(1) NOT NULL CONSTRAINT CONTROLNOCHECK CHECK (USERCONTROLNO IN ('0', '1', '2')),
	USERNAME VARCHAR2(30) NOT NULL,
	USERNICNAME VARCHAR2(30) NOT NULL CONSTRAINT NICNAMECHECK UNIQUE,
	USERSEX CHAR(1) NOT NULL CONSTRAINT SEXCHECK CHECK (USERSEX IN ('M','F','X')),
	USERAGE NUMBER(4) NOT NULL,
	USERPHONNUMBER VARCHAR2(20) NOT NULL,
	USEREMAIL VARCHAR2(30),
	USERSIGNDATE DATE DEFAULT SYSDATE CONSTRAINT SIGNDATE NOT NULL,
	USERENABLE CHAR(1) DEFAULT 'Y' CONSTRAINT ENABLECHECK CHECK (USERENABLE IN ('Y','N')) 
);

SELECT USERSEQ, USERCONTROLNO, USERNAME, USERNICNAME, USERSEX, USERAGE, USERPHONNUMBER, USEREMAIL, USERSIGNDATE, USERENABLE FROM USERINFO;

INSERT INTO USERINFO 
	VALUES(USERINFOSEQ.NEXTVAL,'0','조영찬','메롱캬르르','M','27','010-3495-0424','zongyeng1@navre.com',SYSDATE,'Y');

INSERT INTO USERINFO (USERSEQ,USERCONTROLNO,USERNAME,USERNICNAME,USERSEX,USERAGE,USERPHONNUMBER,USEREMAIL) 
	VALUES(USERINFOSEQ.NEXTVAL,'1','박훈성','pigstar0000','M','29','010-1234-5678','pigstar0000@navre.com');

	
DROP TABLE MUSICIANSONG;
DROP SEQUENCE SONGSEQ;

CREATE SEQUENCE SONGSEQ;

--뮤지션 노래 정보 입니다. 노래 이름을 '고유번호_노래이름'으로 잡아주세요.
--노래 고유번호, 뮤지션고유번호, 노래등록순서번호, 노래이름, 파일용량, 파일길이, 하이라이트 시작 시간, 노래설명, 작곡가, 작사가, 등록일자, 총조회수(SONGSTATISTICS TABLE에서 확인 가능), 총추천수(FAVORITEMUSIC TABLE에서 산출 가능), 활성화여부 
CREATE TABLE MUSICIANSONG(
	SONGSEQ NUMBER PRIMARY KEY,
	MUSICIANSEQ NUMBER,
	SONGNO NUMBER,
	SONGNAME VARCHAR2(30) NOT NULL,
	SONGSIZE NUMBER NOT NULL,
	SONGTIME NUMBER NOT NULL,
	SONGHIGHLIGHTTIME NUMBER DEFAULT '0' NOT NULL,
	SONGCONTENT VARCHAR2(300) DEFAULT '없음' NOT NULL,
	SONGCOMPOSER VARCHAR2(100) DEFAULT '미상'  NOT NULL,
	SONGLYRICIST VARCHAR2(100) DEFAULT '미상' NOT NULL,
	SONGINPUTDATE DATE DEFAULT SYSDATE NOT NULL,
	SONGTAG VARCHAR2(300) DEFAULT '미지정' NOT NULL,
	SONGENABLE CHAR(1) DEFAULT 'Y' CONSTRAINT ENABLESONGCHECK CHECK (SONGENABLE IN ('Y','N')),
	SONGALBUM VARCHAR2(20),
	CONSTRAINT MUSICIANFK FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);

SELECT SONGSEQ, MUSICIANSEQ, SONGNO, SONGNAME, SONGSIZE, SONGTIME, SONGHIGHLIGHTTIME, SONGCONTENT, SONGCOMPOSER, SONGLYRICIST, SONGINPUTDATE, SONGENABLE FROM MUSICIANSONG;

INSERT INTO MUSICIANSONG 
	VALUES(SONGSEQ.NEXTVAL,'1','1','1_FUNKEYMUSIC','13','0350','0123','펑키뮤직!','박훈성','조영찬',SYSDATE,'funky','Y');

INSERT INTO MUSICIANSONG (SONGSEQ,MUSICIANSEQ, SONGNO, SONGNAME, SONGSIZE, SONGTIME) 
	VALUES(SONGSEQ.NEXTVAL,'1','2','1_SMILEDAY','12.23','0401');


DROP TABLE SONGSTATISTICS;

--노래의 조회수와 추천수를 계산하고 기간별 통계낼 수 있는 테이블입니다.
--노래 고유번호, 조회 일자, 추천여부(추천 통계 지원 안하겠음.)
CREATE TABLE SONGSTATISTICS(
	SONGSEQ NUMBER,
	SONGVIEW DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT SONGSEQFK FOREIGN KEY(SONGSEQ) REFERENCES MUSICIANSONG(SONGSEQ) ON DELETE CASCADE
);

INSERT INTO SONGSTATISTICS (SONGSEQ) VALUES('1');

INSERT INTO SONGSTATISTICS (SONGSEQ) VALUES('1');

INSERT INTO SONGSTATISTICS (SONGSEQ) VALUES('1');


DROP SEQUENCE TIMELINENOSEQ;
DROP TABLE TIMELINE;

CREATE SEQUENCE TIMELINENOSEQ;

--타임라인과 댓글기능을 따로 만듭니다.
--타임라인개시물 고유번호, 뮤지션 고유번호, 타임라인개시물 순서, 제목, 내용, 기록일자
--타임라인 내용을 삭제하면 유지하지 않습니다. 비공개도 제공하지 않습니다. 
CREATE TABLE TIMELINE(
	TIMELINESEQ NUMBER PRIMARY KEY,
	MUSICIANSEQ NUMBER,
	TIMELINENO NUMBER,
	TTITLE VARCHAR2(2000) NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL,
	CONSTRAINT TIMELINEFK FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);

SELECT TIMELINESEQ, MUSICIANSEQ, TIMELINENO, TTITLE, CONTENT, REGDATE FROM TIMELINE WHERE MUSICIANSEQ='1' ORDER BY TIMELINENO DESC;

INSERT INTO TIMELINE VALUES(TIMELINENOSEQ.NEXTVAL,'1','1','기부니가 너무 좋소.','아름다운 19년 7월 23일 18시49분이야~',SYSDATE);

INSERT INTO TIMELINE VALUES(TIMELINENOSEQ.NEXTVAL,'1','2','담배피고와서 기부니가 너무 좋소.','꽃같이 아름다운 19년 7월 23일 19시04분이야~',SYSDATE);

DROP SEQUENCE BOARDNOSEQ;
DROP SEQUENCE GROUPNOSEQ;
DROP TABLE TIMELINECOMMENT;

CREATE SEQUENCE BOARDNOSEQ;
CREATE SEQUENCE GROUPNOSEQ;

--어떤 타임라인(모든 타임라인중)의 댓글인가만 구분하여 뽑아내세요. 테이블의 데이터가 굉장히 많아질 수 있겠네요 ㅜㅜ... 하지만 테이블이 많아지는것 보다는 확실히 좋은것 같습니다.
--타임라인개시물 고유번호, 댓글 개수, 댓글 번호, 댓글 번호안의 댓글 순서, 댓글 깊이(0:본문 1:0의 댓글 2:1의 댓글), 제목, 내용, 작성자, 작성일 
CREATE TABLE TIMELINECOMMENT(
	TIMELINESEQ NUMBER,
	BOARDNO NUMBER PRIMARY KEY,
	GROUPNO NUMBER NOT NULL,
	GROUPSQ NUMBER NOT NULL,
	TITLETAB NUMBER NOT NULL,
	TITLE VARCHAR2(60) NOT NULL,
	CONTENT VARCHAR2(1000) NOT NULL,
	WRITER VARCHAR2(30) NOT NULL,
	REGDATE DATE NOT NULL,
	CONSTRAINT TIMELINECOMMENTFK FOREIGN KEY(TIMELINESEQ) REFERENCES TIMELINE(TIMELINESEQ)
);

SELECT TIMELINESEQ,BOARDNO,GROUPNO,GROUPSQ,TITLETAB,TITLE,CONTENT,WRITER,REGDATE FROM TIMELINECOMMENT WHERE TIMELINESEQ='1' ORDER BY GROUPNO DESC, GROUPSQ;

INSERT INTO TIMELINECOMMENT VALUES('1',BOARDNOSEQ.NEXTVAL, GROUPNOSEQ.NEXTVAL,1,0,'1번글','1번글 내용','1번',SYSDATE);
INSERT INTO TIMELINECOMMENT VALUES('1',BOARDNOSEQ.NEXTVAL, GROUPNOSEQ.NEXTVAL,1,0,'2번글','2번글 내용','2번',SYSDATE);
INSERT INTO TIMELINECOMMENT VALUES('1',BOARDNOSEQ.NEXTVAL, GROUPNOSEQ.NEXTVAL,1,0,'3번글','3번글 내용','3번',SYSDATE);
INSERT INTO TIMELINECOMMENT VALUES('1',BOARDNOSEQ.NEXTVAL, GROUPNOSEQ.NEXTVAL,1,0,'4번글','4번글 내용','4번',SYSDATE);
INSERT INTO TIMELINECOMMENT VALUES('1',BOARDNOSEQ.NEXTVAL, GROUPNOSEQ.NEXTVAL,1,0,'5번글','5번글 내용','5번',SYSDATE);

INSERT INTO TIMELINECOMMENT VALUES(
	'1',
	BOARDNOSEQ.NEXTVAL,
	(SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO=5),
	(SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO=5)+1,
	(SELECT TITLETAB FROM TIMELINECOMMENT WHERE BOARDNO=5)+1,
	'RE:5번글-1','5번글-1 답변 내용','6유저',SYSDATE
);


UPDATE TIMELINECOMMENT SET GROUPSQ = GROUPSQ+1 
	WHERE GROUPNO = (SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO = 5) 
	AND GROUPSQ > (SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO = 5);
INSERT INTO TIMELINECOMMENT VALUES(
	'1',
	BOARDNOSEQ.NEXTVAL,
	(SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO=5),
	(SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO=5)+1,
	(SELECT TITLETAB FROM TIMELINECOMMENT WHERE BOARDNO=5)+1,
	'RE:5번글-2','5번글-2 답변 내용','7유저',SYSDATE
);

UPDATE TIMELINECOMMENT SET GROUPSQ = GROUPSQ+1 
	WHERE GROUPNO = (SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO = 7) 
	AND GROUPSQ > (SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO = 7);
INSERT INTO TIMELINECOMMENT VALUES(
	'1',
	BOARDNOSEQ.NEXTVAL,
	(SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO=7),
	(SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO=7)+1,
	(SELECT TITLETAB FROM TIMELINECOMMENT WHERE BOARDNO=7)+1,
	'RE:RE:5번글-2','5번글-2 답변 내용','8유저',SYSDATE
);

INSERT INTO TIMELINECOMMENT VALUES(
	'1',
	BOARDNOSEQ.NEXTVAL,
	(SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO=4),
	(SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO=4)+1,
	(SELECT TITLETAB FROM TIMELINECOMMENT WHERE BOARDNO=4)+1,
	'RE:4번글-1','4번글-1 답변 내용','9유저',SYSDATE
);

UPDATE TIMELINECOMMENT SET GROUPSQ = GROUPSQ+1 
	WHERE GROUPNO = (SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO = 9) 
	AND GROUPSQ > (SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO = 9);
INSERT INTO TIMELINECOMMENT VALUES(
	'1',
	BOARDNOSEQ.NEXTVAL,
	(SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO=9),
	(SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO=9)+1,
	(SELECT TITLETAB FROM TIMELINECOMMENT WHERE BOARDNO=9)+1,
	'RE:RE:4번글-1','4번글-1 답변 내용','10유저',SYSDATE
);

UPDATE TIMELINECOMMENT SET GROUPSQ = GROUPSQ+1 
	WHERE GROUPNO = (SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO = 4) 
	AND GROUPSQ > (SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO = 4);
INSERT INTO TIMELINECOMMENT VALUES(
	'1',
	BOARDNOSEQ.NEXTVAL,
	(SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO=4),
	(SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO=4)+1,
	(SELECT TITLETAB FROM TIMELINECOMMENT WHERE BOARDNO=4)+1,
	'RE:4번글-2','4번글-2 답변 내용','11유저',SYSDATE
);

UPDATE TIMELINECOMMENT SET GROUPSQ = GROUPSQ+1 
	WHERE GROUPNO = (SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO = 11) 
	AND GROUPSQ > (SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO = 11);
INSERT INTO TIMELINECOMMENT VALUES(
	'1',
	BOARDNOSEQ.NEXTVAL,
	(SELECT GROUPNO FROM TIMELINECOMMENT WHERE BOARDNO=11),
	(SELECT GROUPSQ FROM TIMELINECOMMENT WHERE BOARDNO=11)+1,
	(SELECT TITLETAB FROM TIMELINECOMMENT WHERE BOARDNO=11)+1,
	'RE:RE:4번글-2','4번글-2 답변 내용','12유저',SYSDATE
);



DROP TABLE FAVORITEMUSICIAN;
DROP TABLE FAVORITEMUSIC;
DROP TABLE MYMUSICLIST;

--USERSEQ가 MUSICIANSEQ추천.
--내 고유번호, 상대 고유번호.
CREATE TABLE FAVORITEMUSICIAN(
	USERSEQ NUMBER NOT NULL,
	MUSICIANSEQ NUMBER NOT NULL,
	CONSTRAINT FAVORITEMUSICIANFK FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);

--USERSEQ가 MUSICIANSEQ추천.
--내 고유번호, 상대 고유번호.
CREATE TABLE FAVORITEMUSIC(
	USERSEQ NUMBER NOT NULL,
	MUSICIANSEQ NUMBER NOT NULL,
	CONSTRAINT FAVORITEMUSICFK FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);

--USERSEQ가 MUSICIANSEQ추천.
--내 고유번호, 상대 고유번호.
CREATE TABLE MYMUSICLIST(
	USERSEQ NUMBER NOT NULL,
	MUSICIANSEQ NUMBER NOT NULL,
	CONSTRAINT MYMUSICLIST FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);

CREATE TABLE MUSICALBUM(
	ALBUMSEQ NUMBER PRIMARY KEY,
	MUSICIANSEQ NUMBER,
	ALBUMNO NUMBER,
	ALBUMNAME VARCHAR2(30) NOT NULL,
	ALBUMSIZE NUMBER NOT NULL,
	ALBUMTIME NUMBER NOT NULL,
	ALBUMCONTENT VARCHAR2(300) DEFAULT '없음' NOT NULL,
	ALBUMINPUTDATE DATE DEFAULT SYSDATE NOT NULL,
	ALBUMTAG VARCHAR2(300) DEFAULT '미지정' NOT NULL,
	ALBUMENABLE CHAR(1) DEFAULT 'Y' CONSTRAINT ENABLESONGCHECK CHECK (SONGENABLE IN ('Y','N')),
	CONSTRAINT MUSICIANFK FOREIGN KEY(MUSICIANSEQ) REFERENCES USERINFO(USERSEQ)
);

